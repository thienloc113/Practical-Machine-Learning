---
title: "Reproducible Research Project 1"
author: "Loc Nguyen"
date: "8/27/2021"
output: 
      html_document: 
      toc: TRUE
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## Loading and preprocessing the data

- Loading package

```{r library}
library(tidyverse)
library(ggplot2)
library(data.table)
library(lubridate)
```

- Download data
```{r data}
dataurl <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
path <- getwd()
download.file(dataurl, file.path(path, "datafiles.zip"))
unzip(zipfile = "datafiles.zip")
```
## Reading data

```{r readdata}
act.dt <- read.csv("./activity.csv")
```
## What is mean total number of steps taken per day?
- Calculate the total number of steps taken per day

```{r subsetting by day}
step_by_day <- act.dt %>%
      group_by(date) %>%
      summarize(steps=sum(steps))
head(step_by_day, 10)
```
- If you do not understand the difference between a histogram and a barplot, research the difference between them. Make a histogram of the total number of steps taken each day

```{r plot1}
ggplot(step_by_day, aes(x = steps)) +
      geom_histogram(fill = "#FCF54C", alpha = 0.8, binwidth = 1000) +
      labs(title = "Total number of steps taken each day", x = "Steps", y = "Frequency")
```

- Calculate and report the mean and median of the total number of steps taken per day
```{r cal1}
print(paste0('Mean steps is: ', mean(step_by_day$steps, na.rm = T)))
print(paste0('Median steps is: ', median(step_by_day$steps, na.rm = T)))
```
## What is the average daily activity pattern?
- Make a time series plot of the 5-minute interval (x-axis) and the average number of steps taken, averaged across all days 

```{r plot2}
interval.dt <- act.dt %>%
      group_by(interval) %>%
      summarize(steps = mean(steps, na.rm = T))
head(interval.dt, 10)
ggplot(interval.dt, aes(x = interval , y = steps)) + 
      geom_line(color = "#0099FF", size = 0.8) + 
      theme_classic()+
      labs(title = "Avg. Daily Steps", x = "Interval", y = "Avg. Steps per day")
```

- Which 5-minute interval, on average across all the days in the dataset, contains the maximum number of steps?

```{r}
print(paste0('Maximum Steps occurs in interval ', filter(interval.dt, steps == max(steps))$interval))
```

## Imputing missing values
- Calculate and report the total number of missing values in the dataset
```{r number of missing}
nrow(filter(act.dt, is.na(steps)))
```

- Devise a strategy for filling in all of the missing values in the dataset. The strategy does not need to be sophisticated. For example, you could use the mean/median for that day, or the mean for that 5-minute interval, etc.

```{r removing na}
act.0na <- act.dt
act.0na <- group_by(act.dt, interval) %>%
      mutate(steps = ifelse(is.na(steps), mean(steps, na.rm = TRUE), steps))
```
- Create a new dataset that is equal to the original dataset but with the missing data filled in.

```{r write talbe}
write.table(act.0na, file = "tidydataset.txt", row.names = FALSE)
```
- Make a histogram of the total number of steps taken each day and Calculate and report the mean and median total number of steps taken per day. Do these values differ from the estimates from the first part of the assignment? What is the impact of imputing missing data on the estimates of the total daily number of steps?

```{r plot3}
step_by_day <- act.0na %>%
      group_by(date) %>%
      summarize(steps=sum(steps, na.rm = T))

ggplot(step_by_day, aes(x = steps)) +
      geom_histogram(fill = "#FCF54C", alpha = 0.8, binwidth = 1000) +
      labs(title = "Total number of steps taken each day", x = "Steps", y = "Frequency")
print(paste0('Mean steps is: ', mean(step_by_day$steps)))
print(paste0('Median steps is: ', median(step_by_day$steps)))
```


## Are there differences in activity patterns between weekdays and weekends?
- Create a new factor variable in the dataset with two levels – “weekday” and “weekend” indicating whether a given date is a weekday or weekend day.
```{r create Day factor}
act.0na$date <- ymd(act.0na$date)
act.0na["Day_of_Week"] <- weekdays(act.0na$date)

act.0na["Day"] = ifelse(act.0na["Day_of_Week"] == "Sunday" | act.0na["Day_of_Week"] == "Saturday",
                        "Weekend", "Weekday")
act.0na$Day = as.factor(act.0na$Day)
head(act.0na, 10)
```

- Make a panel plot containing a time series plot of the 5-minute interval (x-axis) and the average number of steps taken, averaged across all weekday days or weekend days (y-axis).
```{r plot4}
interval.dt <- act.0na %>%
      group_by(Day, interval) %>%
      summarize(steps = mean(steps, na.rm = T))
head(interval.dt, 10)
ggplot(interval.dt, aes(x = interval , y = steps, color = Day)) + 
      geom_line() + 
      theme(legend.position = "none") +
      labs(title = "Avg. Daily Steps by Daytype", x = "Interval", y = "Avg. Steps taken") +
      facet_wrap(~Day , ncol = 1, nrow = 2)
```


